initSidebarItems({"enum":[["Level","An enum representing the available verbosity levels of the logger."],["Value","Represents any valid JSON value."]],"fn":[["__log_metric",""],["configure_logger_filter",""],["flush",""],["init",""],["silent",""]],"macro":[["debug",""],["debug_target",""],["error",""],["error_target",""],["info",""],["info_target",""],["json","Construct a `serde_json::Value` from a JSON literal."],["log_enabled",""],["log_enabled_target",""],["metric","Enable metrics collection via configuring log filter. Here are some examples: * `filter=info,ckb-metrics=trace`: enable all metrics collection * `filter=info,ckb-metrics=trace,ckb-metrics-sync=off`: enable all metrics collection except   topic \"sync\" * `filter=info,ckb-metrics-sync=trace`: only enable metrics collection of topic \"sync\""],["trace",""],["trace_target",""],["warn",""],["warn_target",""]],"struct":[["Config",""],["Logger",""],["LoggerInitGuard","Flush the logger when dropped"],["Map","Represents a JSON key/value type."],["SetLoggerError","The type returned by [`set_logger`] if [`set_logger`] has already been called."]]});